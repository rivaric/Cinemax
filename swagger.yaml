openapi: 3.0.0
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
info:
  title: Cinemax API
  description: API документация Cinemax приложения
tags:
  - name: Auth
    description: API для авторизации и аутентификации пользователей
  - name: Users
    description: API для работы с пользователями
  - name: Movies
    description: API для работы с фильмами
paths:
  /api/login:
    post:
      summary: Авторизация пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Успешная авторизация
  /api/registration:
    post:
      summary: Регистрация пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Успешная регистрация
  /api/logout:
    post:
      summary: Выход пользователя
      tags:
        - Auth
      responses:
        "200":
          description: Успешный выход
  /api/refresh:
    get:
      summary: Обновление токена
      tags:
        - Auth
      parameters:
        - in: cookie
          name: refreshToken
          schema:
            type: string
          required: true
          description: Куки с токеном обновления
      responses:
        "200":
          description: Токен успешно обновлен
  /api/users:
    get:
      summary: Получить список пользователей
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    password:
                      type: string
                  example:
                    - id: 1
                      email: "email@email.com"
                      password: "e2e41234"
    delete:
      summary: Удалить пользователя
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: body
          name: id
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
      responses:
        "200":
          description: Пользователь успешно удален
  /api/movies:
    get:
      summary: Получить список фильмов
      tags:
        - Movies
      security:
        - bearerAuth: []
      responses:
