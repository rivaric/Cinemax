// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  token    Token?
  img      String @default("")
}

model Token {
  tokenId      Int    @id @default(autoincrement())
  refreshToken String @unique
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @unique
}

model Movie {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  img              String
  duration         Int
  year_of_creation DateTime
  estimations      Int[]
  genre            String[]
  tags             String[]
  artors           ActorsOnMovies[]
  directors        DirectorOnMovies[]
}

model Actor {
  id     Int              @id @default(autoincrement())
  name   String           @unique
  img    String
  movies ActorsOnMovies[]
}

model Director {
  id     Int                @id @default(autoincrement())
  name   String
  img    String
  movies DirectorOnMovies[]
}

model ActorsOnMovies {
  Movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int
  Actor   Actor @relation(fields: [actorId], references: [id])
  actorId Int

  @@id([movieId, actorId])
}

model DirectorOnMovies {
  Movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int
  Director   Director @relation(fields: [directorId], references: [id])
  directorId Int

  @@id([movieId, directorId])
}
